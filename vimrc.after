" Appearance.
set background=dark
colorscheme ir_black

" Don't italicise comments.
hi Comment gui=NONE

" Highlight lines longer than 78 characters.
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
autocmd BufReadPost * match OverLength /\%79v.\+/

" Discourage using cursor keys.
map <Up> ""
map <Down> ""
map <Right> ""
map <Left> ""

" Function which removes all trailing whitespace in the current buffer.
function! RemoveTrailingWhiteSpace()
  %s/\s\+$//
endfunction

" Leader, Shift-2 removes all trailing whitespace.
map <Leader>@ :call RemoveTrailingWhiteSpace()<CR>

" Always keep at least five lines visible when at the bottom of a file.
set scrolloff=5

" Highlight .jbuilder as Ruby.
au BufRead,BufNewFile *.jbuilder set syntax=ruby

" No wrapping by default, thx.
au BufRead,BufNewFile * set nowrap

" Additional ignores for Command-T lists.
set wildignore+=doc/**,documentation/**,webrat.log,coverage,*.png,*.jpg,*.git,*.sassc,tmp/**

" Fill rest of line with characters.
function! FillLine( str )
  " set tw to the desired total length
  let tw = &textwidth

  if tw==0 | let tw = 78 | endif

  " strip trailing spaces first
  .s/[[:space:]]*$//

  " calculate total number of 'str's to insert
  let reps = (tw - col("$")) / len(a:str)

  " insert them, if there's room, removing trailing spaces (though forcing
  " there to be one)
  if reps > 0
    .s/$/\=(' '.repeat(a:str, reps))/
  endif
endfunction

" Maps comment-line completion to <Leader>, Shift+3 on UK keyboards.
map <Leader>Â£ :call FillLine( '-' )<CR>
