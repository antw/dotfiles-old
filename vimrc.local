" Colour theme.
color jellybeans+

" No bad habits, thanks.
map <Up> ""
map <Down> ""
map <Right> ""
map <Left> ""

" Function which removes all trailing whitespace in the current buffer.
function! RemoveTrailingWhiteSpace()
  %s/\s\+$//
endfunction

" Leader, Shift-2 removes all trailing whitespace.
map <Leader>@ :call RemoveTrailingWhiteSpace()<CR>

" Refresh the Command-T cache.
map <Leader>~ :CommandTFlush<CR>

" Always keep at least ten lines visible when at the bottom of a file.
set scrolloff=5

" Shut up Wesley!
let g:HammerQuiet=1

" No wrapping by default, thx.
au BufRead,BufNewFile * set nowrap

au BufRead,BufNewFile *.mustache set syntax=mustache
au BufRead,BufNewFile *.ronn set syntax=markdown wrap wm=2 textwidth=78

" Coffeescript indent by two spaces
au BufRead,BufNewFile *.coffee set tabstop=2 shiftwidth=2

" C / Objective-C / C++ indent by four spaces.
au BufRead,BufNewFile *.{c,m,cpp} set tabstop=4 shiftwidth=4

" Javascript indent by four spaces
au BufRead,BufNewFile *.{js,json} set tabstop=4 shiftwidth=4

" Use JS syntax for JSON.
au BufRead,BufNewFile *.json set syntax=javascript

" Use Ruby syntax for Rabl.
au BufRead,BufNewFile *.rabl set syntax=ruby

" No wrapping in shell files.
au BufRead,BufNewFile *.sh set nowrap

" Ignore documentation/* in Command-T lists.
:set wildignore+=doc/**,documentation/**,webrat.log,coverage,*.png,*.jpg,*.git,*.sassc,tmp/**

" Wrapping rules.
au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn,txt} set wrap textwidth=72

" E-mail authoring.
au BufRead,BufNewFile *.email set wrap textwidth=68 syntax=markdown

" JSONify files are just Ruby.
au BufRead,BufNewFile *.jsonify set syntax=ruby

" fill rest of line with characters
function! FillLine( str )
  " set tw to the desired total length
  let tw = &textwidth

  if tw==0 | let tw = 78 | endif

  " strip trailing spaces first
  .s/[[:space:]]*$//

  " calculate total number of 'str's to insert
  let reps = (tw - col("$")) / len(a:str)

  " insert them, if there's room, removing trailing spaces (though forcing
  " there to be one)
  if reps > 0
    .s/$/\=(' '.repeat(a:str, reps))/
  endif
endfunction

" Maps comment-line completion to <Leader>, Shift+3 on UK keyboards.
map <Leader>Â£ :call FillLine( '-' )<CR>
